user_login:
  url:     /login
  param: { module: user, action: login }
  
user_registration:
  url:     /registration
  param: { module: user, action: registration }
  
user_ajax_registration:
  url:     /ajax_registration
  param: { module: user, action: ajax_registration }
  requirements:
    sf_method: [post]
    
user_profile:
  url:     /profile
  param: { module: user, action: profile }
  
user_films_list:
  url:     /unpublic_films
  param: { module: user, action: unpublic_films }
  
user_logout:
  url:     /logout
  param: { module: user, action: logout }
  
user_show:
  url:     /userinfo/:id
  class:   sfPropelRoute
  options:
    model: Users
    type: object
    method_for_criteria: getActivedOne
  param:  { module: user, action: show }
  requirements:
    id: \d+
    sf_method: [get]
  
#search
search:
  url:   /search
  param: { module: search, action: index }
 
search_auto_complete:
  url:   /search_auto_complete
  param: { module: search, action: auto_complete }
  
#film types
film_types:
  url:     /cathegory/:id/:url
  class:   sfPropelRoute
  options:
    model: FilmTypes
    type: object
    method_for_criteria: doSelectActive
  param:  { module: film_types, action: show }
  requirements:
    id: \d+
    url: (.*)
    sf_method: [get]

#film add   
film_add_step1:
  url:     /film/add1
  param:  { module: film, action: add_step1 }

film_edit_step1:
  url:     /film/edit1/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectUserUnpublic
  param:  { module: film, action: edit_step1 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_delete_step1:
  url:     /film/delete1/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectUserUnpublic
  param:  { module: film, action: delete_film }
  requirements:
    id: \d+
    sf_method: [get]
  
film_add_step2:
  url:     /film/add2/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectUserUnpublic
  param:  { module: film, action: add_step2 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_edit_step2:
  url:     /film/edit2/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectUserUnpublic
  param:  { module: film, action: edit_step2 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_delete_gallery:
  url:     /film/delete_gallery/:id
  class:   sfPropelRoute
  options:
    model: FilmGallery
    type: object
  param:  { module: film, action: delete_gallery }
  requirements:
    id: \d+
    sf_method: [get]
    
film_add_step3:
  url:     /film/add3/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectUserUnpublic
  param:  { module: film, action: add_step3 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_edit_step3:
  url:     /film/edit3/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectUserUnpublic
  param:  { module: film, action: edit_step3 }
  requirements:
    id: \d+
    sf_method: [get, post]

film_delete_step3:
  url:     /film/delete_link/:id
  class:   sfPropelRoute
  options:
    model: FilmLinks
    type: object
  param:  { module: film, action: delete_link }
  requirements:
    id: \d+
    sf_method: [get]
    
film_add_final:
  url:     /film/add_final/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectUserUnpublic
  param:  { module: film, action: add_final }
  requirements:
    id: \d+
    sf_method: [get, post]    

#film one
film_show:
  url:     /film/:id/:url
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectOneVisible
  param:  { module: film, action: show }
  requirements:
    id: \d+
    url: (.*)
    sf_method: [get, post] 

#comment
comment_add:
  url:     /comment/add
  param:  { module: comment, action: add }
  requirements:
    sf_method: [post]

#static
static_page:
  url:     /page/:id/:url
  class:   sfPropelRoute
  options:
    model: StaticPages
    type: object
    method_for_criteria: doSelectOneVisible
  param:  { module: static, action: show }
  requirements:
    id: \d+
    url: (.*)
    sf_method: [get]
    
 

homepage_atom:
  url:   /atom
  param: { module: index, action: index, sf_format: atom }
    
homepage_rss:
  url:   /rss
  param: { module: index, action: index, sf_format: xml }
  
# default rules
homepage:
  url:   /
  param: { module: index, action: index }

default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*
