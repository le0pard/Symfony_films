user_login:
  url:     /login
  param: { module: user, action: login }
  
user_registration:
  url:     /registration
  param: { module: user, action: registration }
  
user_ajax_registration:
  url:     /ajax_registration
  param: { module: user, action: ajax_registration }
  requirements:
    sf_method: [post]
    
user_registration_done:
  url:     /registration_done
  param: { module: user, action: registration_done }

user_activate:
  url:     /activate/:id/:persistence_token
  class:   sfPropelRoute
  options:
    model: Users
    type: object
  param:  { module: user, action: activate }
  requirements:
    id: \d+
    persistence_token: (.*)
    sf_method: [get]  

user_forgot_pass:
  url:     /forgot_pass
  param: { module: user, action: forgot_pass }
  
user_forgot_pass_token:
  url:     /forgot_pass_token/:id/:persistence_token
  class:   sfPropelRoute
  options:
    model: Users
    type: object
    method_for_criteria: getActivedOne
  param: { module: user, action: forgot_pass_token } 
  requirements:
    id: \d+
    persistence_token: (.*)
    sf_method: [get, post]  

user_profile:
  url:     /profile
  param: { module: user, action: profile }
  
user_change_password:
  url:     /change_password
  param: { module: user, action: change_password }  
  
user_logout:
  url:     /logout
  param: { module: user, action: logout }
  
user_films_list:
  url:     /unpublic_films
  param: { module: user, action: unpublic_films }
  
user_moder_films_list:
  url:     /unvisible_films
  param: { module: user, action: unvisible_films }  
  
user_show:
  url:     /userinfo/:id
  class:   sfPropelRoute
  options:
    model: Users
    type: object
    method_for_criteria: getActivedOne
  param:  { module: user, action: show }
  requirements:
    id: \d+
    sf_method: [get]
  
#search
search:
  url:   /search
  param: { module: search, action: index }
 
search_auto_complete:
  url:   /search_auto_complete
  param: { module: search, action: auto_complete }
  
#film types
film_types_all:
  url:   /cathegory/all
  param: { module: film_types, action: index }
  
film_types_all_pages:
  url:   /cathegory/all/:page
  param: { module: film_types, action: index }
  requirements:
    page: \d+
  
film_types_all_atom:
  url:   /cathegory/all.atom
  param: { module: film_types, action: index, sf_format: atom }
    
film_types_all_rss:
  url:   /cathegory/all.rss
  param: { module: film_types, action: index, sf_format: xml }

film_types:
  url:     /cathegory/:id/:url
  class:   sfPropelRoute
  options:
    model: FilmTypes
    type: object
    method_for_criteria: doSelectActive
  param:  { module: film_types, action: show }
  requirements:
    id: \d+
    sf_method: [get]
    
film_types_rss:
  url:     /cathegory/:id/:url.rss
  class:   sfPropelRoute
  options:
    model: FilmTypes
    type: object
    method_for_criteria: doSelectActive
  param:  { module: film_types, action: show, sf_format: xml }
  requirements:
    id: \d+
    sf_method: [get]

film_types_atom:
  url:     /cathegory/:id/:url.atom
  class:   sfPropelRoute
  options:
    model: FilmTypes
    type: object
    method_for_criteria: doSelectActive
  param:  { module: film_types, action: show, sf_format: atom }
  requirements:
    id: \d+
    sf_method: [get]      

film_year:
  url:     /year/:year
  param:  { module: film_types, action: year }
  requirements:
    year: ([0-9]{4})
    sf_method: [get]
    
film_year_pager:
  url:     /year/:year/:page
  param:  { module: film_types, action: year }
  requirements:
    year: ([0-9]{4})
    page: \d+
    sf_method: [get]

#film add   
film_add_step1:
  url:     /film/add1
  param:  { module: film, action: add_step1 }

film_edit_step1:
  url:     /film/edit1/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: edit_step1 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_delete_step1:
  url:     /film/delete1/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: delete_film }
  requirements:
    id: \d+
    sf_method: [get]
  
film_add_step2:
  url:     /film/add2/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: add_step2 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_add_swf_step2:
  url:     /film/add_swf2/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: add_swf_step2 }
  requirements:
    id: \d+
    sf_method: [post]
    
film_edit_step2:
  url:     /film/edit2/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: edit_step2 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_sort_step2:
  url:     /film/sort2/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: sort_step2 }
  requirements:
    id: \d+
    sf_method: [post]
    
film_delete_gallery:
  url:     /film/delete_gallery/:id
  class:   sfPropelRoute
  options:
    model: FilmGallery
    type: object
  param:  { module: film, action: delete_gallery }
  requirements:
    id: \d+
    sf_method: [get]
    
film_add_step3:
  url:     /film/add3/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: add_step3 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_edit_step3:
  url:     /film/edit3/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: edit_step3 }
  requirements:
    id: \d+
    sf_method: [get, post]

film_sort_step3:
  url:     /film/sort3/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: sort_step3 }
  requirements:
    id: \d+
    sf_method: [post]

film_delete_step3:
  url:     /film/delete_link/:id
  class:   sfPropelRoute
  options:
    model: FilmLinks
    type: object
  param:  { module: film, action: delete_link }
  requirements:
    id: \d+
    sf_method: [get]

film_add_step4:
  url:     /film/add4/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: add_step4 }
  requirements:
    id: \d+
    sf_method: [get, post]
    
film_edit_step4:
  url:     /film/edit4/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: edit_step4 }
  requirements:
    id: \d+
    sf_method: [get, post]    

film_sort_step4:
  url:     /film/sort4/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: sort_step4 }
  requirements:
    id: \d+
    sf_method: [post]

film_delete_step4:
  url:     /film/delete_trailer/:id
  class:   sfPropelRoute
  options:
    model: FilmTrailer
    type: object
  param:  { module: film, action: delete_trailer }
  requirements:
    id: \d+
    sf_method: [get]
    
film_add_final:
  url:     /film/add_final/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectEditFilm
  param:  { module: film, action: add_final }
  requirements:
    id: \d+
    sf_method: [get, post]    

film_twitter:
  url:     /film/twitter/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
  param:  { module: film, action: twitter }
  requirements:
    id: \d+
    sf_method: [post]

#film one
film_show:
  url:     /film/:id/:url
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectOneVisible
  param:  { module: film, action: show }
  requirements:
    id: \d+
    url: (.*)
    sf_method: [get, post]
    
film_raiting:
  url:     /film/raiting/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectOneVisible
  param:  { module: film, action: raiting }
  requirements:
    id: \d+
    sf_method: [post]

#comment
comment_add:
  url:     /comment/add/:id
  class:   sfPropelRoute
  options:
    model: Film
    type: object
    method_for_criteria: doSelectOneVisible
  param:  { module: comment, action: add }
  requirements:
    sf_method: [post]

comment_edit:
  url:     /comment/edit/:id
  class:   sfPropelRoute
  options:
    model: Comments
    type: object
  param:  { module: comment, action: edit }
  requirements:
    id: \d+
    sf_method: [get, post]

comment_delete:
  url:     /comment/delete/:id
  class:   sfPropelRoute
  options:
    model: Comments
    type: object
  param:  { module: comment, action: delete }
  requirements:
    id: \d+
    sf_method: [get]

comments_last_list:
  url:     /comments_list
  param:  { module: comment, action: last_comments }
  requirements:
    sf_method: [get]

#links
go_by_link_id:
  url:     /go/:id/:hash
  class:   sfPropelRoute
  options:
    model: FilmLinks
    type: object
  param:  { module: link, action: index }
  requirements:
    id: \d+
    hash: (.*)
    sf_method: [get]
    
#static
static_page:
  url:     /page/:id/:url
  class:   sfPropelRoute
  options:
    model: StaticPages
    type: object
    method_for_criteria: doSelectOneVisible
  param:  { module: static, action: show }
  requirements:
    id: \d+
    url: (.*)
    sf_method: [get]

#news
news_all:
  url:     /news
  param: { module: news, action: index }
  
news_page_all:
  url:     /news/:page
  param: { module: news, action: index }
  requirements:
    page: \d+ 
  
news_xml_all:
  url:     /news.xml
  param: { module: news, action: index, sf_format: xml }
  
news_atom_all:
  url:     /news.xml
  param: { module: news, action: index, sf_format: atom }  

news_one:
  url:     /news/:id/:url
  class:   sfPropelRoute
  options:
    model: News
    type: object
    method_for_criteria: getVisible
  param:  { module: news, action: show }
  requirements:
    id: \d+
    url: (.*)
    sf_method: [get]

#afisha
afisha:
  url:    /afisha
  param:  { module: afisha, action: index }

afisha_get_shows_by_date:
  url:    /afisha/city/:id/date/:year/:month/:day
  param:  { module: afisha, action: index }
  requirements:
    id: \d+
    year: ([0-9]{4})
    month: (?:0[1-9]|1[0-2])
    day: (?:[0][1-9]|[1-2][0-9]|3[0-1])
  
afisha_get_shows:
  url:    /afisha/city/:id
  class:   sfPropelRoute
  options:
    model: AfishaCity
    type: object
  param:  { module: afisha, action: index }
  requirements:
    id: \d+
    sf_method: [get] 
       
afisha_get_cities:
  url:    /afisha_get_cities/:id
  class:   sfPropelRoute
  options:
    model: AfishaCountry
    type: object
  param:  { module: afisha, action: get_cities }
  requirements:
    id: \d+
    sf_method: [post]

afisha_cinema_by_date:
  url:    /afisha/cinema/:id/date/:year/:month/:day
  param:  { module: afisha, action: cinema }
  requirements:
    id: \d+
    year: ([0-9]{4})
    month: (?:0[1-9]|1[0-2])
    day: (?:[0][1-9]|[1-2][0-9]|3[0-1])
    sf_method: [get]
    
afisha_cinema:
  url:    /afisha/cinema/:id
  class:   sfPropelRoute
  options:
    model: AfishaTheater
    type: object
  param:  { module: afisha, action: cinema }
  requirements:
    id: \d+
    sf_method: [get]    

afisha_film_by_date:
  url:    /afisha/film/:id/date/:year/:month/:day
  param:  { module: afisha, action: film }
  requirements:
    id: \d+
    year: ([0-9]{4})
    month: (?:0[1-9]|1[0-2])
    day: (?:[0][1-9]|[1-2][0-9]|3[0-1])
    sf_method: [get]

afisha_film:
  url:    /afisha/film/:id
  class:   sfPropelRoute
  options:
    model: AfishaFilm
    type: object
  param:  { module: afisha, action: film }
  requirements:
    id: \d+
    sf_method: [get]

afisha_film_city:
  url:    /afisha/film/:id/city/:city_id
  class:   sfPropelRoute
  options:
    model: AfishaFilm
    type: object
  param:  { module: afisha, action: film }
  requirements:
    id: \d+
    city_id: \d+
    sf_method: [get]

afisha_film_city_by_date:
  url:    /afisha/film/:id/city/:city_id/date/:year/:month/:day
  param:  { module: afisha, action: film }
  requirements:
    id: \d+
    year: ([0-9]{4})
    month: (?:0[1-9]|1[0-2])
    day: (?:[0][1-9]|[1-2][0-9]|3[0-1])
    city_id: \d+
    sf_method: [get]

afisha_films_today_ajax:
  url:    /afisha_films_today
  param:  { module: afisha, action: films_today_ajax }

#static pages
static_page_verlihub:
  url:   /statistic_verlihub
  param: { module: static_page, action: verlihub }

static_page_jabber:
  url:   /statistic_jabber
  param: { module: static_page, action: jabber }
  
static_page_rules:
  url:   /statistic_rules
  param: { module: static_page, action: rules }
  
static_page_contacts:
  url:   /statistic_contacts
  param: { module: static_page, action: contacts }

#statistic
statistic:
  url:   /statistic
  param: { module: statistic, action: index }

statistic_cathegory_films:
  url:   /statistic_cathegory_films
  param: { module: statistic, action: cathegory_films }  
  
statistic_films_by_day:
  url:   /statistic_films_by_day
  param: { module: statistic, action: films_by_day } 
 
#sitemap
sitemap:
  url:   /sitemap.xml
  param: { module: index, action: sitemap, sf_format: xml }


# 404 page
404error_page:
  url:   /<?php echo sfConfig::get('sf_error_404_module') ?>/<?php echo sfConfig::get('sf_error_404_action')."\n" ?>
  param: { module: <?php echo sfConfig::get('sf_error_404_module') ?>, action: <?php echo sfConfig::get('sf_error_404_action') ?> }

# mobile routes
mobile_afisha:
  url:    /mobile/afisha
  param:  { module: mobile, action: afisha, sf_format: mobile }
  class:  sfRequestHostRoute
  requirements:
    sf_host: <?php echo sfConfig::get('app_mobile_domain')."\n" ?>

film_poster_mobile:
  url:    /mobile/film_poster/:id
  param:  { module: mobile, action: film_poster, sf_format: mobile }
  class:  sfRequestHostRoute
  requirements:
    id: \d+
    sf_host: <?php echo sfConfig::get('app_mobile_domain')."\n" ?>

film_mobile:
  url:     /mobile/film/:id
  class:  sfRequestHostRoute
  param:  { module: mobile, action: film, sf_format: mobile }
  requirements:
    id: \d+
    sf_host: <?php echo sfConfig::get('app_mobile_domain')."\n" ?>

films_mobile:
  url:    /mobile/films/:page
  param:  { module: mobile, action: index, sf_format: mobile }
  class:  sfRequestHostRoute
  requirements:
    page: \d+
    sf_host: <?php echo sfConfig::get('app_mobile_domain')."\n" ?>

homepage_mobile:
  url:    /
  param:  { module: mobile, action: index, sf_format: mobile }
  class:  sfRequestHostRoute
  requirements:
    sf_host: <?php echo sfConfig::get('app_mobile_domain')."\n" ?>


  
# default rules
homepage_standard:
  url:   /
  param: { module: index, action: index }
  class:  sfRequestHostRoute
  requirements:
    sf_host: <?php echo sfConfig::get('app_domain')."\n" ?>    

homepage:
  url:   /
  param: { module: index, action: index }



#default_index:
#  url:   /:module
#  param: { action: index }

#default:
#  url:   /:module/:action/*
